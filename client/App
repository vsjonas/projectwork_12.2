package helloworld.jonas.de.helloworld;

import android.content.DialogInterface;
import android.content.Intent;
import android.graphics.Color;
import android.hardware.camera2.params.ColorSpaceTransform;
import android.net.Uri;
import android.os.Bundle;
import android.support.design.widget.FloatingActionButton;
import android.support.design.widget.Snackbar;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;
import android.util.Log;
import android.view.MotionEvent;
import android.view.View;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.Button;
import android.widget.TextView;
import android.view.View.OnClickListener;
import android.hardware.Sensor;
import android.hardware.SensorEvent;
import android.hardware.SensorManager;
import android.hardware.SensorEventListener;
import android.widget.ImageButton;
import java.net.InetSocketAddress;
import android.widget.CompoundButton;


import com.google.android.gms.appindexing.Action;
import com.google.android.gms.appindexing.AppIndex;
import com.google.android.gms.common.api.GoogleApiClient;

import java.io.PrintWriter;
import java.net.Socket;

public class MainActivity extends AppCompatActivity implements SensorEventListener {



    public Button btn, btn4, btn2, btn3, btn5, btn6, btn7, btn8, btn9,btn10;
    public Button btnA[] = {btn,btn4,btn2,btn3,btn6,btn7,btn8,btn9,btn10};
    public TextView tw3,tw;
    public Sensor SensorACC;
    public SensorManager SM;
    public int a = 0;
    public float SyncX;
    public float SyncY;
    public float ÄnderungX, ÄnderungY;
    public boolean rechts, links, oben, unten;
    public int modus = 0;
    public static Socket socket;
    public PrintWriter out;
    public boolean verbunden = true;
    public CompoundButton sw1;
    public MotionEvent event;
    public int i = 0;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);

        SM = (SensorManager) getSystemService(SENSOR_SERVICE);
        SensorACC = SM.getDefaultSensor(Sensor.TYPE_GAME_ROTATION_VECTOR);

        SM.registerListener(this, SensorACC, SensorManager.SENSOR_DELAY_FASTEST);

        btn = (Button) findViewById(R.id.button);
        btn2 = (Button) findViewById(R.id.button3);
        btn3 = (Button) findViewById(R.id.button4);
        btn4 = (Button) findViewById(R.id.button5);
        btn5 = (Button) findViewById(R.id.button6);
        btn6 = (Button) findViewById(R.id.button7);
        btn7 = (Button) findViewById(R.id.button8);
        btn8 = (Button) findViewById(R.id.button9);
        btn9 = (Button) findViewById(R.id.button10);
        btn10 = (Button)findViewById(R.id.button2);
        sw1 = (CompoundButton)findViewById(R.id.switch1);

        tw3 = (TextView) findViewById(R.id.textView3);
        tw = (TextView) findViewById(R.id.textView);

        tw3.setText("unconnected");

       connect();

        btn9.setOnClickListener(new OnClickListener() {
            public void onClick(View v) {
                a = 0;
            }
        });

        btn10.setOnClickListener(new OnClickListener() {
            public void onClick(View v) {
                connect();
                if (verbunden == true) {
                    btn10.setBackgroundColor(Color.GREEN);
                } else {
                    btn10.setBackgroundColor(Color.RED);
                }
            }
        });

        for(i = 0;i < btnA.length;i++){
            btnA[i].setOnTouchListener(new View.OnTouchListener() {
                @Override
                public boolean onTouch(View v, MotionEvent event) {
                    if (event.getAction() == MotionEvent.ACTION_DOWN) {
                        if (!sw1.isChecked()) {
                            btnA[i].setBackgroundColor(Color.RED);
                        }
                    }
                    if (event.getAction() == MotionEvent.ACTION_UP) {
                        btnA[i].setBackgroundColor(Color.WHITE);
                        }
                    return true;
                }
        });
        }

      /*  btn2.setOnTouchListener(new View.OnTouchListener() {
            @Override
            public boolean onTouch(View v, MotionEvent event) {
                if (event.getAction() == MotionEvent.ACTION_DOWN) {
                    if (!sw1.isChecked()) {
                        oben = true;
                        modus = 1;
                        btn2.setBackgroundColor(Color.RED);
                    }
                }
                if (event.getAction() == MotionEvent.ACTION_UP) {
                    btn2.setBackgroundColor(Color.WHITE);
                    oben = false;
                    if (modus == 1) {
                        modus = 0;
                    }
                }
                return true;
            }
        });
        btn3.setOnTouchListener(new View.OnTouchListener() {
            @Override
            public boolean onTouch(View v, MotionEvent event) {
                if (event.getAction() == MotionEvent.ACTION_DOWN) {
                    if (!sw1.isChecked()) {
                        unten = true;
                        modus = 5;
                        btn3.setBackgroundColor(Color.RED);
                    }
                }
                if (event.getAction() == MotionEvent.ACTION_UP) {
                    btn3.setBackgroundColor(Color.WHITE);
                    unten = false;
                    if (modus == 5) {
                        modus = 0;
                    }
                }
                return true;
            }
        });
        btn2.setOnTouchListener(new View.OnTouchListener() {
            @Override
            public boolean onTouch(View v, MotionEvent event) {
                if (event.getAction() == MotionEvent.ACTION_DOWN) {
                    if (!sw1.isChecked()) {
                        oben = true;
                        modus = 1;
                        btn2.setBackgroundColor(Color.RED);
                    }
                }
                if (event.getAction() == MotionEvent.ACTION_UP) {
                    btn2.setBackgroundColor(Color.WHITE);
                    oben = false;
                    if (modus == 1) {
                        modus = 0;
                    }
                }
                return true;
            }
        });
        btn2.setOnTouchListener(new View.OnTouchListener() {
            @Override
            public boolean onTouch(View v, MotionEvent event) {
                if (event.getAction() == MotionEvent.ACTION_DOWN) {
                    if (!sw1.isChecked()) {
                        oben = true;
                        modus = 1;
                        btn2.setBackgroundColor(Color.RED);
                    }
                }
                if (event.getAction() == MotionEvent.ACTION_UP) {
                    btn2.setBackgroundColor(Color.WHITE);
                    oben = false;
                    if (modus == 1) {
                        modus = 0;
                    }
                }
                return true;
            }
        });
        btn2.setOnTouchListener(new View.OnTouchListener() {
            @Override
            public boolean onTouch(View v, MotionEvent event) {
                if (event.getAction() == MotionEvent.ACTION_DOWN) {
                    if (!sw1.isChecked()) {
                        oben = true;
                        modus = 1;
                        btn2.setBackgroundColor(Color.RED);
                    }
                }
                if (event.getAction() == MotionEvent.ACTION_UP) {
                    btn2.setBackgroundColor(Color.WHITE);
                    oben = false;
                    if (modus == 1) {
                        modus = 0;
                    }
                }
                return true;
            }
        });
        btn2.setOnTouchListener(new View.OnTouchListener() {
            @Override
            public boolean onTouch(View v, MotionEvent event) {
                if (event.getAction() == MotionEvent.ACTION_DOWN) {
                    if (!sw1.isChecked()) {
                        oben = true;
                        modus = 1;
                        btn2.setBackgroundColor(Color.RED);
                    }
                }
                if (event.getAction() == MotionEvent.ACTION_UP) {
                    btn2.setBackgroundColor(Color.WHITE);
                    oben = false;
                    if (modus == 1) {
                        modus = 0;
                    }
                }
                return true;
            }
        });
        btn2.setOnTouchListener(new View.OnTouchListener() {
            @Override
            public boolean onTouch(View v, MotionEvent event) {
                if (event.getAction() == MotionEvent.ACTION_DOWN) {
                    if (!sw1.isChecked()) {
                        oben = true;
                        modus = 1;
                        btn2.setBackgroundColor(Color.RED);
                    }
                }
                if (event.getAction() == MotionEvent.ACTION_UP) {
                    btn2.setBackgroundColor(Color.WHITE);
                    oben = false;
                    if (modus == 1) {
                        modus = 0;
                    }
                }
                return true;
            }
        });
        btn2.setOnTouchListener(new View.OnTouchListener() {
            @Override
            public boolean onTouch(View v, MotionEvent event) {
                if (event.getAction() == MotionEvent.ACTION_DOWN) {
                    if (!sw1.isChecked()) {
                        oben = true;
                        modus = 1;
                        btn2.setBackgroundColor(Color.RED);
                    }
                }
                if (event.getAction() == MotionEvent.ACTION_UP) {
                    btn2.setBackgroundColor(Color.WHITE);
                    oben = false;
                    if (modus == 1) {
                        modus = 0;
                    }
                }
                return true;
            }
        });

        */
    }


    @Override
    public void onSensorChanged(SensorEvent event) {

        if (a == 0) {
            SyncX = event.values[0];
            SyncY = event.values[1];
            a = 1;
        }

        tw.setText("Modus " + modus);

      //  tw.setText("Y Änderung: " + (SyncY - event.values[1]));
      // tw2.setText("x Änderung: " + (SyncX - event.values[0]));

        if(sw1.isChecked()) {

            ÄnderungX = (SyncX - event.values[0]);
            ÄnderungY = (SyncY - event.values[1]);


            // X-Achse

            if (ÄnderungX > 0.15) {
                btn2.setBackgroundColor(Color.RED);
                oben = true;
                modus = 1;
            } else {
                btn2.setBackgroundColor(Color.WHITE);
                oben = false;
                if (modus == 1) {
                    modus = 0;
                }
            }

            if (ÄnderungX < -0.15) {
                btn3.setBackgroundColor(Color.RED);
                unten = true;
                modus = 5;
            } else {
                btn3.setBackgroundColor(Color.WHITE);
                unten = false;
                if (modus == 5) {
                    modus = 0;
                }
            }

            // Y - Achse

            if (ÄnderungY < -0.15) {
                btn4.setBackgroundColor(Color.RED);
                rechts = true;
                modus = 3;
            } else {
                btn4.setBackgroundColor(Color.WHITE);
                rechts = false;
                if (modus == 3) {
                    modus = 0;
                }
            }

            if (ÄnderungY > 0.15) {
                btn.setBackgroundColor(Color.RED);
                links = true;
                modus = 7;
            } else {
                btn.setBackgroundColor(Color.WHITE);
                links = false;
                if (modus == 7) {
                    modus = 0;
                }
            }
        }
            // Ecken

            if (oben && links) {
                clear();
                btn5.setBackgroundColor(Color.RED);
                modus = 8;
            } else {
                btn5.setBackgroundColor(Color.WHITE);

            }

            if (oben && rechts) {
                clear();
                btn6.setBackgroundColor(Color.RED);
                modus = 2;
            } else {
                btn6.setBackgroundColor(Color.WHITE);
            }

            if (unten && rechts) {
                clear();
                btn8.setBackgroundColor(Color.RED);
                modus = 4;
            } else {
                btn8.setBackgroundColor(Color.WHITE);

            }

            if (unten && links) {
                clear();
                btn7.setBackgroundColor(Color.RED);
                modus = 6;
            } else {
                btn7.setBackgroundColor(Color.WHITE);
            }

            // Modus Ecken

            if ((links = false) && (links = false)) {
                if (modus == 6) {
                    modus = 0;
                }
            }

            if ((unten = false) && (rechts = false)) {
                if (modus == 4) {
                    modus = 0;
                }
            }

            if ((oben = false) && (rechts = false)) {
                if (modus == 2) {
                    modus = 0;
                }
            }

            if ((oben = false) && (links = false)) {
                if (modus == 8) {
                    modus = 0;
                }
            }

            if (verbunden == true) {
                try {
                    out.println(modus + "05");
                } catch (Exception ex) {
                    ex.printStackTrace();
                }

            }



    }

    @Override
    public void onAccuracyChanged(Sensor sensor, int accuracy) {
        //unbenutzt
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.menu_main, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement

        if (id == R.id.Seite2) {
            startActivity(new Intent("android.intent.action.Second"));
            return true;
        }


        return super.onOptionsItemSelected(item);
    }

    public void clear() {
        btn.setBackgroundColor(Color.WHITE);
        btn2.setBackgroundColor(Color.WHITE);
        btn3.setBackgroundColor(Color.WHITE);
        btn4.setBackgroundColor(Color.WHITE);
        btn5.setBackgroundColor(Color.WHITE);
        btn6.setBackgroundColor(Color.WHITE);
        btn7.setBackgroundColor(Color.WHITE);
        btn8.setBackgroundColor(Color.WHITE);
    }

    @Override
    public void onStart() {
        super.onStart();
    }

    @Override
    public void onStop() {
        super.onStop();

        try{
         out.print("010");
            socket.close();
            verbunden = false;
        }catch (Exception ex)
        {
            ex.printStackTrace();
        }}


        public void connect(){
        try{
            socket = new Socket();
            socket.connect(new InetSocketAddress("192.168.3.1", 13000), 1000);
            out = new PrintWriter(socket.getOutputStream(), true);
            verbunden = true;
            tw3.setText("connected");
        }catch (Exception ex)
        {
            ex.printStackTrace();
            verbunden = false;

        }
    }
}
